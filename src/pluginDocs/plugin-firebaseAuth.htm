
<div id = "main">
	<h3><a id="firebaseAuth">Firebase Auth Plugin</a></h3>
	<p>This plugin allows you to log in though <a href="https://firebase.google.com">firebase</a> auth for iOS(8+) and Android(4.0 +)</p>
	<p></p>
	<h3>Functions:</h3>
	<p></p>
	<p><h5>firebaseAuth.init()</h5></p>
	<p></p>
	<p><h5>firebaseAuth.createAccount(email, password, listener)</h5>--create account with email</p>
	<p>email(string)</p>
	<p>password(string)</p>
	<p>listener(function) event.isError(boolean value, true if successful and false if not) and event.error(string value, description of error, nil if isError is false)</p>
	<p></p>
	<p><h5>firebaseAuth.signIn(email, password, listener)</h5>--login with email</p>
	<p>email(string)</p>
	<p>password(string)</p>
	<p>listener(function) event.isError(boolean value, true if successful and false if not) and event.error(string value, description of error, nil if isError is false)</p>
	<p></p>
	<p><h5>firebaseAuth.sendVerification(listener)</h5>--send a verification email to logined in user</p>
	<p>listener(function) event.isError(boolean value, true if successful and false if not) and event.error(string value, description of error, nil if isError is false)</p>
	<p></p>
	<p><h5>firebaseAuth.resetPassword(email,listener)</h5>--send an email to reset password</p>
	<p>email(string) email to sent reset to</p>
	<p>listener(function) event.isError(boolean value, true if successful and false if not) and event.error(string value, description of error, nil if isError is false)</p>
	<p></p>
	<p><h5>firebaseAuth.isSignedIn()</h5>returns boolean, true if logged in, false if not</p>
	<p></p>
	<p><h5>firebaseAuth.isEmailVerified()</h5>returns boolean, true if email on account logged in is verified, false if not</p>
	<p></p>
	<p><h5>firebaseAuth.isAnonymous()</h5>returns boolean, true if account is anonymous, false if not</p>
	<p></p>
	<p><h5>firebaseAuth.getUID()</h5>returns string, unique identifier for account</p>
	<p></p>
	<p><h5>firebaseAuth.getEmail()</h5>returns string, email for account</p>
	<p></p>
	<p><h5>firebaseAuth.getDisplayName()</h5>returns string, display name for account</p>
	<p></p>
	<p><h5>firebaseAuth.getPhoneNumber()</h5>returns string, phone number for account</p>
	<p></p>
	<p><h5>firebaseAuth.getPhotoUrl()</h5>returns string, url (http://) for account photo</p>
	<p></p>
	<p><h5>firebaseAuth.getRefreshToken(listener)</h5>--get refresh token for account</p>
	<p>listener(function) event.isError(boolean value, true if successful and false if not), event.error(string value, description of error, nil if isError is false), and event.token (string value, refresh token)</p>
	<p></p>
	<p><h5>firebaseAuth.setPhotoUrl(url,listener)</h5>--set url for account photo</p>
	<p>listener(function) event.isError(boolean value, true if successful and false if not) and event.error(string value, description of error, nil if isError is false)</p>
	<p></p>
	<p><h5>firebaseAuth.setEmail(email,listener)</h5>--set email for account</p>
	<p>listener(function) event.isError(boolean value, true if successful and false if not) and event.error(string value, description of error, nil if isError is false)</p>
	<p></p>
	<p><h5>firebaseAuth.setDisplayName(name,listener)</h5>--set name for account</p>
	<p>listener(function) event.isError(boolean value, true if successful and false if not) and event.error(string value, description of error, nil if isError is false)</p>
	<p></p>
	<p><h5>firebaseAuth.updatePassword(password,listener)</h5>--update password for account</p>
	<p>listener(function) event.isError(boolean value, true if successful and false if not) and event.error(string value, description of error, nil if isError is false)</p>
	<p></p>
	<p><h5>firebaseAuth.deleteAccount(listener)</h5>--delete account</p>
	<p>listener(function) event.isError(boolean value, true if successful and false if not) and event.error(string value, description of error, nil if isError is false)</p>
	<p></p>
	<p><h5>firebaseAuth.signOut(listener)</h5>--sign out of account</p>
	<p>listener(function) event.isError(boolean value, true if successful and false if not) and event.error(string value, description of error, nil if isError is false)</p>
	<p></p>
	<p><h5>firebaseAuth.sendVerificationCode(phoneNumber,listener)</h5>--send verfication code to phone to be used to .signInWithPhoneNumber</p>
	<p>phoneNumber(string) phone number to send code to</p>
	<p>listener(function) event.isError(boolean value, true if successful and false if not) and event.error(string value, description of error, nil if isError is false)</p>
	<p></p>
	<p><h5>firebaseAuth.signInWithPhoneNumber(code,listener)</h5>--send verfication code to phone to be used to .signInWithPhoneNumber</p>
	<p>code(string) code sent with .sendVerificationCode</p>
	<p>listener(function) event.isError(boolean value, true if successful and false if not) and event.error(string value, description of error, nil if isError is false)</p>
	<p></p>
	<p><h5>firebaseAuth.signInWithApple(listener)</h5>--sign in with apple</p>
	<p>listener(function) event.isError(boolean value, true if successful and false if not) and event.error(string value, description of error, nil if isError is false)</p>
	<p>For iOS add provisioning profile support for apple sign in your apple devloper account, also add the following to your build.settings </p>
<code><pre>settings = <br/>
{<br/>
	iphone =<br/>
	{<br/>
		entitlements = {<br/>
			["com.apple.developer.applesignin"] = {"Default"}, -- make sure provisioning profile supports apple sign in <br/>
		}<br/>
	},<br/>
}</code></pre>
	<p>For Android read the Firebase guide <a href="https://firebase.google.com/docs/auth/android/apple#before-you-begin">here</a></p>
	<p></p>
	<p><h5>firebaseAuth.signInWithGoogle(idToken, accessToken,listener)</h5>--sign in with google</p>
	<p>idToken(string) id token for google</p>
	<p>accessToken(string) access token for google</p>
	<p>listener(function) event.isError(boolean value, true if successful and false if not) and event.error(string value, description of error, nil if isError is false)</p>
	<p></p>
	<p><h5>firebaseAuth.signInWithFacebook(accessToken, listener)</h5>--sign in with facebook(Please note you have to handle sign in yourself)</p>
	<p>accessToken(string) access token for facebook</p>
	<p>listener(function) event.isError(boolean value, true if successful and false if not) and event.error(string value, description of error, nil if isError is false)</p>
	<p></p>
	<p><h5>firebaseAuth.signInWithTwitter(token, secret, listener)</h5>--sign in with twitter(Please note you have to handle sign in yourself)</p>
	<p>token(string)</p>
	<p>secret(string)</p>
	<p>listener(function) event.isError(boolean value, true if successful and false if not) and event.error(string value, description of error, nil if isError is false)</p>
	<p></p>
	<p><h5>firebaseAuth.signInWithGithub(accessToken, listener)</h5>--sign in with github(Please note you have to handle sign in yourself)</p>
	<p>accessToken(string)</p>
	<p>listener(function) event.isError(boolean value, true if successful and false if not) and event.error(string value, description of error, nil if isError is false)</p>
	<p></p>
	<p><h5>firebaseAuth.signInWithCustomToken(accessToken, listener)</h5>--sign in with customer server</p>
	<p>accessToken(string)</p>
	<p>listener(function) event.isError(boolean value, true if successful and false if not) and event.error(string value, description of error, nil if isError is false)</p>
	<p></p>
	<p><h5>firebaseAuth.signInAnonymously(listener)</h5>--sign in without account and used for security</p>
	<p>listener(function) event.isError(boolean value, true if successful and false if not) and event.error(string value, description of error, nil if isError is false)</p>
	<p></p>
	<p><h5>firebaseAuth.isNetworkAvailable()</h5>--check for wifi access, returns boolean, true if device has internet access, false if not</p>
	<p></p>
	<p><h5>firebaseAuth.doesEmailExist(listener, email)</h5>--checks if email is already registered</p>
	<p>listener(function) event.isError(boolean value, true if successful and false if not) and event.error(string value, description of error, nil if isError is false). If isError is false then event.doesEmailExist (boolean is returned, true if email exists, false if email does not exists). </p>
	<p>email(string) email to check if registered</p>
	<p></p>
	<p><h5>firebaseAuth.signInWithGameNetwork(listener, serverAuthCode)</h5>--sign in with Game Center(iOS) or GPGS(Android)</p>
	<p>listener(function) event.isError(boolean value, true if successful and false if not) and event.error(string value, description of error, nil if isError is false)</p>
	<p>serverAuthCode(string)(used for Android ingored on iOS/MacOS) used for Google Sign In with GSPS</p>
	<p></p>
	<p></p>
	<p><a id="setup"><h3>Setup:</h3></a></h3></p>
	<p>Make sure you download and include GoogleServices-Info.plist and put in root folder of corona project. Also add your google-services.json to your root folder and useGoogleServicesJson = true in build.settings. Please note according to firebase docs, you must have firebase cloud messaging enabled for phone login. Please follow setup on <a href="https://docs.coronalabs.com/plugin/notifications-v2/index.html">Corona FCM plugin page</a></p>
	<p></p>
	<img src="/pluginDocs/projectSettings.png">
	<p></p>
	<img src="/pluginDocs/androidJson.png">
	<p></p>
	<img src="/pluginDocs/iosPlist.png">
	<p></p>
<code><pre>settings =
{
	plugins =
	{
		["plugin.firebaseAuth"] =
		{
			publisherId="tech.scotth",
			marketplaceId = "insert marketplace account ID",
		},
	},
	android =
	{
		useGoogleServicesJson = true,
	},
}</code></pre>
	<p></p>
	<h5> Helpful Links:</h5>
	<p></p>
	<p><a href="https://solar2dmarketplace.com/plugins?FirebaseAuth_tech-scotth">Get Plugin</a></p>
	<p> <a href="https://github.com/scottrules44/firebaseAuth-demo">Example</a> </p>
	<p> <a href="https://forums.solar2d.com/c/corona-marketplace/13">Support</a> </p>
</div>
