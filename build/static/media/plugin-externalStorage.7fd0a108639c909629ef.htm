<div id = "main">
	<h3><a id="externalStorage"></a>External Storage Plugin</h3>
	<p>This plugin allows you control manage file outside the app sandbox and into the phone</p>
	<p></p>
	<p></p>
	<p><h3>Limitations:</h3> Only works Android and only handles external storage</p>
	<p></p>
	<p><h3>Functions:</h3></p>
	<p></p>
	<p>externalStorage.requestExternalStorage(listener)-- presents a popup where a users can grant app external storage access</p>
	<p>listener(functions)(optional) returns callback event.status == "permission granted" or "permission denied" </p>
<code><pre>
externalStorage.requestExternalStorage(function (event)<br/>
    print(event.status)<br/>
end)<br/>
</pre></code>
	<p></p>
	<p>externalStorage.hasAccessToExternalStorage()-- returns true or false if app has external storage access </p>
<code><pre>
print(externalStorage.hasAccessToExternalStorage())<br/>
</pre></code>
	<p></p>
	<p>externalStorage.getFile(pathExternal, pathCorona,shouldLookAtRoot)-- returns one of the following strings "could not find file", "could not save file", or "file saved". shouldLookAtRoot = should we look at base of device (default is false, true recommended for sd card  </p>
	<p>tranfer file to corona</p>
	<p>pathExternal(string)-- where to get the file example "/test.txt"</p>
	<p>pathCorona(path)-- where to export the file to, note <a href="https://docs.coronalabs.com/api/library/system/pathForFile.html">system.pathForFile</a>
	<p>shouldLookAtRoot(boolean)(optional)--(default is false) if set to true will check root instead of External Storage</p>
<code><pre>
local pathDocs =system.pathForFile("test.txt", system.DocumentsDirectory)<br/>
print(externalStorage.getFile("/test.txt", pathDocs))<br/>
</pre></code>
	<p></p>
	<p>externalStorage.copyFile(pathCorona, pathExternal, shouldLookAtRoot)-- returns one of the following strings "could not find file", "could not save file", or "file saved". shouldLookAtRoot = should we look at base of device (default is false, true recommended for sd card  </p>
	<p>tranfer file to external file</p>
	<p>pathCorona(path)-- where to export the file to, note <a href="https://docs.coronalabs.com/api/library/system/pathForFile.html">system.pathForFile</a>
	<p>pathExternal(string)-- where to export the file to example "/folder1/test.txt"</p>
	<p>shouldLookAtRoot(boolean)(optional)--(default is false) if set to true will check root instead of External Storage</p>
<code><pre>
local pathCorona = system.pathForFile( "test.txt" )<br/>
print(externalStorage.copyFile(pathCorona, "hello123.txt"))<br/>
</pre></code>
	<p></p>
	<p>externalStorage.deleteFile(pathExternal, shouldLookAtRoot)-- returns boolean true if deleted, false if not. shouldLookAtRoot = should we look at base of device (default is false, true recommended for sd card ) </p>
	<p>delete file in external storage</p>
	<p>pathExternal(string)-- where to delete the file example "/test123.txt"</p>
	<p>shouldLookAtRoot(boolean)(optional)--(default is false) if set to true will check root instead of External Storage</p>
<code><pre>
print( externalStorage.deleteFile("/test.txt") )<br/>
</pre></code>
	<p></p>
	<p>externalStorage.listFiles(pathExternal, shouldLookAtRoot)-- returns array of file paths, shouldLookAtRoot = should we look at base of device (default is false, true recommended for sd card )</ </p>
	<p>list files in external storage</p>
	<p>pathExternal(string)-- where to list the files example "/Music"</p>
	<p>shouldLookAtRoot(boolean)(optional)--(default is false) if set to true will check root instead of External Storage</p>
<code><pre>
print( "----------------" )<br/>
print( json.encode( externalStorage.listFiles("/folder")))<br/>
print( "----------------" )<br/>
</pre></code>
	<p></p>
	<p>externalStorage.doesFileExist(pathExternal, shouldLookAtRoot)-- returns boolean true if file exists, false if not, shouldLookAtRoot = should we look at base of device (default is false, true recommended for sd card )</p>
	<p>does file exist in external storage</p>
<code><pre>
print(externalStorage.doesFileExist("/test.png"))<br/>
</pre></code>
	<p>pathExternal(string)-- where to check if file exists example "/dir/myFile.pdf"</p>
	<p>shouldLookAtRoot(boolean)(optional)--(default is false) if set to true will check root instead of External Storage</p>
	<p></p>
	<p>externalStorage.makeFolder(pathExternal, shouldLookAtRoot)-- </p>
	<p>pathExternal(string)-- where to put the file and what to call the file "/newFolder"</p>
	<p></p>
	<p>externalStorage.isSdCardConnected()-- returns boolean, true if connected , false if not</p>
	<p></p>
	<p>externalStorage.sdCardPath()-- returns path of sd card to be used to copy, delete, get and list files with apis above</p>
	<p></p>
	<p>externalStorage.isSdCardWriteable()-- can you write to sd card (there may be restritions), returns boolean</p>
	<p></p>
	<p>externalStorage.totalSpace()-- returns mb(number) of data on phone</p>
	<p></p>
	<p>externalStorage.spaceAvailable()-- returns mb(number) of data free on phone</p>
<code><pre>
print("MB of total space"..externalStorage.totalSpace().."/".."MB of available space"..externalStorage.spaceAvailable())<br/>
print("SD card hooked up and readable and writable?"..externalStorage.isSdCardConnected())<br/>
print("path of sd card:"..externalStorage.sdCardPath())<br/>
</pre></code>
	<p></p>
	<p>externalStorage.getExternalFilesDir(type)-- returns the absolute path to the directory on the primary shared/external storage device.</p>
	<p>type(string) The type of files directory to return.</p>
	<p></p>
	<p>externalStorage.rename(pathExternal, newName,shouldLookAtRoot)</p>
	<p>pathExternal(string)-- where is the file to rename</p>
	<p></p>
	<p>newName(string)-- what to name the new file</p>
	<p></p>
	<p>shouldLookAtRoot(boolean)(optional) if true, it will look at root</p>
	<p></p>
	<p><h3>Properties:</h3></p>
	<p>the following return string that can be used in copy, delete, get and list files with apis above</p>
	<unordered-list-item>
		<li>externalStorage.dcim</li>
		<li>externalStorage.download</li>
		<li>externalStorage.movies</li>
		<li>externalStorage.ringtones</li>
		<li>externalStorage.podcasts</li>
		<li>externalStorage.music</li>
	</unordered-list-item>
	<p><h3>Support for Android 12</h3></p>
	<p>Please make sure your app requests Permission via externalStorage.requestExternalStorage(listener) and check with externalStorage.hasAccessToExternalStorage()</p>
	<p><h3>Build.settings</h3></p>
<code><pre>settings =<br/>
{<br/>
	android = {<br/>
		usesPermissions = {<br/>
			"android.permission.WRITE_EXTERNAL_STORAGE",<br/>
			"android.permission.READ_EXTERNAL_STORAGE",<br/>
			"android.permission.MANAGE_EXTERNAL_STORAGE",<br/>
		}<br/>
	},<br/>
	plugins = {<br/>
		["plugin.externalStorage"] =<br/>
		{<br/>
	  		publisherId="tech.scotth",<br/>
	  		marketplaceId = "insert marketplace account ID",<br/>
		},<br/>
	},<br/>
}</code></pre>
	<h5> Helpful Links:</h5>
	<p></p>
	<p><a href="https://solar2dmarketplace.com/plugins?ExternalStorage_tech-scotth">Get Plugin</a></p>
	<p><a href="https://github.com/scottrules44/externalStorage-demo">Example</a></p>
	<p> <a href="https://forums.solar2d.com/c/corona-marketplace/13">Support</a> </p>
</div>